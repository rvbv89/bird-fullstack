{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\garzo\\\\OneDrive\\\\Documents\\\\Work\\\\bird-react-full-refactor-table-components\\\\client\\\\src\\\\components\\\\BasicTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo } from \"react\";\nimport { useTable, useSortBy, usePagination } from \"react-table\";\nimport { COLUMNS } from \"./columns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicTable({\n  initData,\n  tableDisplay\n}) {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => initData, [initData]); // props.cell.row.original[\"speciesCode\"]\n  //function for fetching data for table page render\n  // const fetchPageData = useCallback(\n  //   ({ pageSize, pageIndex }) => {\n  //     const fetchId = ++fetchIdRef.current;\n  //     setLoading(true);\n  //     if (fetchId === fetchIdRef.current) {\n  //       fetchRenderData({\n  //         limit: pageSize,\n  //         skip: pageSize * pageIndex,\n  //         search: searchTerm,\n  //       });\n  //     }\n  //   },\n  //   [searchTerm]\n  // );\n\n  const tableInstance = useTable({\n    columns,\n    data,\n    manualPagination: true,\n    pageCount: controlledPageCount\n  }, useSortBy, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    setHiddenColumns,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ui blue table\",\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSorted ? \"ðŸ”¼\" : \"ðŸ”½\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: [page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-row\",\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/garzo/OneDrive/Documents/Work/bird-react-full-refactor-table-components/client/src/components/BasicTable.jsx"],"names":["React","useCallback","useMemo","useTable","useSortBy","usePagination","COLUMNS","BasicTable","initData","tableDisplay","columns","data","tableInstance","manualPagination","pageCount","controlledPageCount","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","setPageSize","setHiddenColumns","state","pageIndex","pageSize","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","isSorted","row","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from \"react\";\r\nimport { useTable, useSortBy, usePagination } from \"react-table\";\r\nimport { COLUMNS } from \"./columns\";\r\n\r\nexport default function BasicTable({ initData, tableDisplay }) {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => initData, [initData]);\r\n\r\n  // props.cell.row.original[\"speciesCode\"]\r\n\r\n  //function for fetching data for table page render\r\n  // const fetchPageData = useCallback(\r\n  //   ({ pageSize, pageIndex }) => {\r\n  //     const fetchId = ++fetchIdRef.current;\r\n  //     setLoading(true);\r\n  //     if (fetchId === fetchIdRef.current) {\r\n  //       fetchRenderData({\r\n  //         limit: pageSize,\r\n  //         skip: pageSize * pageIndex,\r\n  //         search: searchTerm,\r\n  //       });\r\n  //     }\r\n  //   },\r\n  //   [searchTerm]\r\n  // );\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      manualPagination: true,\r\n      pageCount: controlledPageCount,\r\n    },\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    setHiddenColumns,\r\n    state: { pageIndex, pageSize },\r\n  } = tableInstance;\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"ui blue table\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted ? (column.isSorted ? \"ðŸ”¼\" : \"ðŸ”½\") : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr className=\"table-row\" {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n          <tr>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}