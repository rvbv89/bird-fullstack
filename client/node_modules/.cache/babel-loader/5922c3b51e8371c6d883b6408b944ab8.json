{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\garzo\\\\OneDrive\\\\Documents\\\\Work\\\\bird-react-full-refactor-table-components\\\\client\\\\src\\\\components\\\\Table.jsx\";\nimport React, { useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport { COLUMNS } from \"./columns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table({\n  tableData\n}) {\n  var _s = $RefreshSig$();\n\n  _s(({\n    tableData\n  }) => {\n    _s();\n\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => tableData, []);\n    const tableInstance = useTable({\n      columns,\n      data\n    });\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      preprareRow\n    } = tableInstance;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: [headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...columns.getHeaderProps(),\n              children: column.render(\"Header\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: [rows.map(row => {\n            preprareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render(\"Cell\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this);\n  }, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n    return [useTable];\n  });\n}\n_c = Table;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/garzo/OneDrive/Documents/Work/bird-react-full-refactor-table-components/client/src/components/Table.jsx"],"names":["React","useMemo","useTable","COLUMNS","Table","tableData","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","preprareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAA4B;AAAA;;AACvC,MAAC;AAAEA,IAAAA;AAAF,GAAD,KAAmB;AAAA;;AACrB,UAAMC,OAAO,GAAGL,OAAO,CAAC,MAAME,OAAP,EAAgB,EAAhB,CAAvB;AACA,UAAMI,IAAI,GAAGN,OAAO,CAAC,MAAMI,SAAP,EAAkB,EAAlB,CAApB;AAEA,UAAMG,aAAa,GAAGN,QAAQ,CAAC;AAC7BI,MAAAA,OAD6B;AAE7BC,MAAAA;AAF6B,KAAD,CAA9B;AAKA,UAAM;AAAEE,MAAAA,aAAF;AAAiBC,MAAAA,iBAAjB;AAAoCC,MAAAA,YAApC;AAAkDC,MAAAA,IAAlD;AAAwDC,MAAAA;AAAxD,QACJL,aADF;AAGA,wBACE;AAAA,6BACE,sBAAWC,aAAa,EAAxB;AAAA,gCACE;AAAA,qBACGE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,uBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,mBAAQZ,OAAO,CAACa,cAAR,EAAR;AAAA,wBAAmCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAnC;AAAA;AAAA;AAAA;AAAA,oBADD,CADH,eAIE;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,CADH,eASE;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,sBAAWV,iBAAiB,EAA5B;AAAA,qBACGE,IAAI,CAACE,GAAL,CAAUO,GAAD,IAAS;AACjBR,YAAAA,WAAW,CAACQ,GAAD,CAAX;AACA,gCACE,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,wBACGD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAU;AACvB,oCACE,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,4BAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,wBADF;AAGD,eAJA;AADH;AAAA;AAAA;AAAA;AAAA,oBADF;AASD,WAXA,CADH,eAaE;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoCD,GAhDG;AAAA,YAIoBlB,QAJpB;AAAA;AAgDF;KAjDsBE,K;AAiDtB","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport { COLUMNS } from \"./columns\";\r\n\r\nexport default function Table({tableData}) { \r\n    ({ tableData }) => {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => tableData, []);\r\n\r\n  const tableInstance = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, preprareRow } =\r\n    tableInstance;\r\n\r\n  return (\r\n    <div>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...columns.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n              <th></th>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            preprareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n          <tr>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}};\r\n"]},"metadata":{},"sourceType":"module"}