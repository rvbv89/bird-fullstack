{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\garzo\\\\OneDrive\\\\Documents\\\\Work\\\\bird-react-full-refactor-table-components\\\\client\\\\src\\\\components\\\\BasicTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { COLUMNS } from \"./columns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicTable({\n  initData,\n  onClickPic,\n  tableDisplay\n}) {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => initData, [initData]);\n  console.log(initData);\n  const tableInstance = useTable({\n    columns,\n    data\n  }, useSortBy);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSorted ? \"ðŸ”¼\" : \"ðŸ”½\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: [rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              console.log(cell.column);\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\", {\n                  com: 'com'\n                }, {\n                  sci: \"sci\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/garzo/OneDrive/Documents/Work/bird-react-full-refactor-table-components/client/src/components/BasicTable.jsx"],"names":["React","useMemo","useTable","useSortBy","COLUMNS","BasicTable","initData","onClickPic","tableDisplay","columns","data","console","log","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","isSorted","row","getRowProps","cells","cell","getCellProps","com","sci"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAGA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA;AAAxB,CAApB,EAA4D;AAAA;;AACzE,QAAMC,OAAO,GAAGR,OAAO,CAAC,MAAMG,OAAP,EAAgB,EAAhB,CAAvB;AACA,QAAMM,IAAI,GAAGT,OAAO,CAAC,MAAMK,QAAP,EAAiB,CAACA,QAAD,CAAjB,CAApB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEA,QAAMO,aAAa,GAAGX,QAAQ,CAC5B;AACEO,IAAAA,OADF;AAEEC,IAAAA;AAFF,GAD4B,EAM5BP,SAN4B,CAA9B;AASA,QAAM;AAAEW,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MACJL,aADF;AAGA,sBACE;AAAA,2BACE,sBAAWC,aAAa,EAAxB;AAAA,8BACE;AAAA,kBACGE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,uBACGD,MAAM,CAACE,MAAP,CAAc,QAAd,CADH,eAEE;AAAA,wBACGF,MAAM,CAACG,QAAP,GAAmBH,MAAM,CAACG,QAAP,GAAkB,IAAlB,GAAyB,IAA5C,GAAoD;AADvD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,sBAAWX,iBAAiB,EAA5B;AAAA,mBACGE,IAAI,CAACE,GAAL,CAAUQ,GAAD,IAAS;AACjBT,UAAAA,UAAU,CAACS,GAAD,CAAV;AACA,8BACE,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBACGD,GAAG,CAACE,KAAJ,CAAUV,GAAV,CAAeW,IAAD,IAAU;AACvBnB,cAAAA,OAAO,CAACC,GAAR,CAAYkB,IAAI,CAACP,MAAjB;AACA,kCACE,mBAAQO,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ,EAAoB;AAACO,kBAAAA,GAAG,EAAE;AAAN,iBAApB,EAAkC;AAACC,kBAAAA,GAAG,EAAE;AAAN,iBAAlC;AAA9B;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD,aALA;AADH;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAZA,CADH,eAcE;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAvDuB5B,U;UAKAH,Q;;;KALAG,U","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport { COLUMNS } from \"./columns\";\r\n\r\n\r\nexport default function BasicTable({ initData, onClickPic, tableDisplay }) {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => initData, [initData]);\r\n  console.log(initData);\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      \r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    tableInstance;\r\n\r\n  return (\r\n    <div>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted ? (column.isSorted ? \"ðŸ”¼\" : \"ðŸ”½\") : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  console.log(cell.column)\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\", {com: 'com'}, {sci: \"sci\"})}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n          <tr>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}