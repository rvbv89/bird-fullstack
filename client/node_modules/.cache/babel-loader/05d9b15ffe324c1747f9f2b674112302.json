{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\garzo\\\\OneDrive\\\\Documents\\\\Work\\\\bird-react-full-refactor-table-components\\\\client\\\\src\\\\components\\\\BasicTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { COLUMNS } from \"./columns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicTable({\n  initData,\n  tableDisplay\n}) {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => initData, [initData]);\n  console.log(initData);\n\n  const onClickRow = () => {\n    const ebird_redirect = `https://ebird.org/species/${props.cell.row.original[\"speciesCode\"]}`;\n    window.open(ebird_redirect);\n    console.log(props.cell.row.original);\n  };\n\n  const tableInstance = useTable({\n    columns,\n    data\n  }, useSortBy);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ui blue table\",\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSorted ? \"ðŸ”¼\" : \"ðŸ”½\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: [rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            onClick: e => {\n              console.log(\"getrowprops\");\n            },\n            children: row.cells.map(cell => {\n              console.log(cell.column);\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\" // { com: \"com\" },\n                // { sci: \"sci\" }\n                )\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasicTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/garzo/OneDrive/Documents/Work/bird-react-full-refactor-table-components/client/src/components/BasicTable.jsx"],"names":["React","useMemo","useTable","useSortBy","COLUMNS","BasicTable","initData","tableDisplay","columns","data","console","log","onClickRow","ebird_redirect","props","cell","row","original","window","open","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","isSorted","getRowProps","e","cells","getCellProps"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\nimport { COLUMNS } from \"./columns\";\r\n\r\nexport default function BasicTable({ initData, tableDisplay }) {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => initData, [initData]);\r\n  console.log(initData);\r\n\r\n  const onClickRow = () => {\r\n    const ebird_redirect = `https://ebird.org/species/${props.cell.row.original[\"speciesCode\"]}`;\r\n    window.open(ebird_redirect);\r\n    console.log(props.cell.row.original);\r\n  };\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    tableInstance;\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"ui blue table\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted ? (column.isSorted ? \"ðŸ”¼\" : \"ðŸ”½\") : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr\r\n                {...row.getRowProps()}\r\n                onClick={(e) => {\r\n                  console.log(\"getrowprops\");\r\n                }}\r\n              >\r\n                {row.cells.map((cell) => {\r\n                  console.log(cell.column);\r\n                  return (\r\n                    <td {...cell.getCellProps()}>\r\n                      {cell.render(\r\n                        \"Cell\"\r\n                        // { com: \"com\" },\r\n                        // { sci: \"sci\" }\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n          <tr>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}